{"ast":null,"code":"import _regeneratorRuntime from\"/Users/deepkakadia/Desktop/Benchmark-Update/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/deepkakadia/Desktop/Benchmark-Update/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(username,password){var res,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:localStorage.removeItem(\"token\");_context.next=3;return fetch(\"http://localhost:8000/api/user/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:username,password:password})});case 3:res=_context.sent;_context.next=6;return res.json();case 6:response=_context.sent;if(response.token){localStorage.setItem(\"token\",response.token);}return _context.abrupt(\"return\",res.ok);case 9:case\"end\":return _context.stop();}}},_callee);}));return function login(_x,_x2){return _ref.apply(this,arguments);};}();export var signup=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,name,password){var res,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:8000/api/profile/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,name:name,password:password})});case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:response=_context2.sent;if(response.email&response.name){localStorage.setItem(\"username\",response.email);localStorage.setItem(\"name\",response.name);}return _context2.abrupt(\"return\",res.ok);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function signup(_x3,_x4,_x5){return _ref2.apply(this,arguments);};}();export var logout=function logout(){localStorage.removeItem(\"token\");};export var isLogin=function isLogin(){if(localStorage.getItem(\"token\")===\"undefined\"||typeof localStorage.getItem(\"token\")===undefined||localStorage.getItem(\"token\")===null){return false;}return true;};","map":{"version":3,"sources":["/Users/deepkakadia/Desktop/Benchmark-Update/client/src/utils/index.js"],"names":["login","username","password","localStorage","removeItem","fetch","method","headers","body","JSON","stringify","email","res","json","response","token","setItem","ok","signup","name","logout","isLogin","getItem","undefined"],"mappings":"+UAAA,MAAO,IAAMA,CAAAA,KAAK,0FAAG,iBAAOC,QAAP,CAAiBC,QAAjB,mIACnBC,YAAY,CAACC,UAAb,CAAwB,OAAxB,EADmB,sBAEHC,CAAAA,KAAK,CAAC,sCAAD,CAAyC,CAC5DC,MAAM,CAAE,MADoD,CAE5DC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFmD,CAK5DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAGC,KAAK,CAAEV,QAAV,CAAmBC,QAAQ,CAAEA,QAA7B,CAAf,CALsD,CAAzC,CAFF,QAEfU,GAFe,qCASEA,CAAAA,GAAG,CAACC,IAAJ,EATF,QASfC,QATe,eAUnB,GAAIA,QAAQ,CAACC,KAAb,CAAoB,CAClBZ,YAAY,CAACa,OAAb,CAAqB,OAArB,CAA8BF,QAAQ,CAACC,KAAvC,EACD,CAZkB,gCAaZH,GAAG,CAACK,EAbQ,wDAAH,kBAALjB,CAAAA,KAAK,gDAAX,CAgBP,MAAO,IAAMkB,CAAAA,MAAM,2FAAG,kBAAOP,KAAP,CAAcQ,IAAd,CAAoBjB,QAApB,8JACJG,CAAAA,KAAK,CAAC,oCAAD,CAAuC,CAC1DC,MAAM,CAAE,MADkD,CAE1DC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFiD,CAK1DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,KAAK,CAALA,KAAF,CAASQ,IAAI,CAAJA,IAAT,CAAejB,QAAQ,CAARA,QAAf,CAAf,CALoD,CAAvC,CADD,QAChBU,GADgB,uCAQCA,CAAAA,GAAG,CAACC,IAAJ,EARD,QAQhBC,QARgB,gBASpB,GAAIA,QAAQ,CAACH,KAAT,CAAiBG,QAAQ,CAACK,IAA9B,CAAoC,CAClChB,YAAY,CAACa,OAAb,CAAqB,UAArB,CAAiCF,QAAQ,CAACH,KAA1C,EACAR,YAAY,CAACa,OAAb,CAAqB,MAArB,CAA6BF,QAAQ,CAACK,IAAtC,EACD,CAZmB,iCAabP,GAAG,CAACK,EAbS,0DAAH,kBAANC,CAAAA,MAAM,sDAAZ,CAgBP,MAAO,IAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAC1BjB,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACD,CAFM,CAIP,MAAO,IAAMiB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAC3B,GACElB,YAAY,CAACmB,OAAb,CAAqB,OAArB,IAAkC,WAAlC,EACA,MAAOnB,CAAAA,YAAY,CAACmB,OAAb,CAAqB,OAArB,CAAP,GAAyCC,SADzC,EAEApB,YAAY,CAACmB,OAAb,CAAqB,OAArB,IAAkC,IAHpC,CAIE,CACA,MAAO,MAAP,CACD,CAED,MAAO,KAAP,CACD,CAVM","sourcesContent":["export const login = async (username, password) => {\n  localStorage.removeItem(\"token\");\n  let res = await fetch(\"http://localhost:8000/api/user/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({  email: username,password: password }),\n  });\n  let response = await res.json();\n  if (response.token) {\n    localStorage.setItem(\"token\", response.token);\n  }\n  return res.ok;\n};\n\nexport const signup = async (email, name, password) => {\n  let res = await fetch(\"http://localhost:8000/api/profile/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, name, password }),\n  });\n  let response = await res.json();\n  if (response.email & response.name) {\n    localStorage.setItem(\"username\", response.email);\n    localStorage.setItem(\"name\", response.name);\n  }\n  return res.ok;\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\nexport const isLogin = () => {\n  if (\n    localStorage.getItem(\"token\") === \"undefined\" ||\n    typeof localStorage.getItem(\"token\") === undefined ||\n    localStorage.getItem(\"token\") === null\n  ) {\n    return false;\n  }\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}